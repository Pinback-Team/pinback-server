plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
    group = 'com.pinback'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

def queryDslVersion = "6.11"

apply from: 'querydsl.gradle'

dependencies {
    implementation project(':shared')
    implementation project(':core')
    implementation project(':infrastructure')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    //querydsl
    implementation("io.github.openfeign.querydsl:querydsl-core:${queryDslVersion}")
    implementation("io.github.openfeign.querydsl:querydsl-jpa:$queryDslVersion")
    annotationProcessor("io.github.openfeign.querydsl:querydsl-apt:$queryDslVersion:jpa")

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'com.auth0:java-jwt:4.5.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'com.h2database:h2'
    testImplementation 'com.h2database:h2'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'
}

subprojects {
    apply plugin: 'java'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.incremental = true
        options.compilerArgs += ['-Xlint:deprecation']
    }

    tasks.withType(Test).configureEach {
        inputs.property("java.vendor", System.getProperty("java.vendor"))
        inputs.property("java.version", System.getProperty("java.version"))

        outputs.upToDateWhen {
            !project.hasProperty('forceTests')
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
