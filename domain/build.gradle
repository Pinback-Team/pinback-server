plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.pinback'
version = '0.0.1-SNAPSHOT'

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.2"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // shared 모듈 의존성
    implementation project(':shared')

    // JPA 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // QueryDSL 의존성
    implementation 'io.github.openfeign.querydsl:querydsl-core:6.11'
    implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.11'
    annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:6.11:jpa'

    // h2 데이터베이스 의존성
    runtimeOnly 'com.h2database:h2'
    testImplementation 'com.h2database:h2'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generated = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
    main.java.srcDirs += generated
}

tasks.withType(JavaCompile).configureEach {
    inputs.files(fileTree(dir: 'src', include: '**/*.java'))
    outputs.cacheIf { true }
    options.annotationProcessorGeneratedSourcesDirectory = generated
}

clean {
    delete generated
}

tasks.named('test') {
    useJUnitPlatform()
}
